
# import the vbnmr module.
import vbnmr;

# create a model.
mdl = vfgp(
  tau: 1.0,
  nu: 1e-6,
  data: data(file: 'toy1d.dat'),
  factors: 3 * [decay(alpha: 1, beta: 1e4, fixed: true) *
                quad(mu: 0, tau: 1e3, ftsize: 65536)]
);

# create a mean-field optimizer.
opt = mf(
  model: mdl,
  maxIters: 1
);

# optimize.
opt.execute();

# allocate datasets for prediction.
mean = data();
var = data();

# augment the prediction datasets with grids.
G = [[0, 1, 5000]];
mean.augment(outputs: [0, 1], grid: G);
var.augment(outputs: [0, 1], grid: G);

# compute and write the vfr prediction.
mdl.predict(mean: mean, var: var);
mean.write(file: 'vfr-mean.dat');
var.write(file: 'vfr-var.dat');

# compute and write the gp prediction.
mdl.gp = true;
mdl.predict(mean: mean, var: var);
mean.write(file: 'gp-mean.dat');
var.write(file: 'gp-var.dat');

